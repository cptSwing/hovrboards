/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        board_regular: THREE.Mesh;
    };
    materials: {};
};

export function BoardRegular(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/gltf/board_regular.glb') as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <group>
                <mesh name='board_regular' castShadow receiveShadow geometry={nodes.board_regular.geometry} material={nodes.board_regular.material}>
                    <group name='socket_ornament_1' position={[0, 0.01488, 0.44996]} rotation={[Math.PI / 2, 0, 0]} />
                    <group name='socket_engine' position={[0, 0.01488, -0.35]} rotation={[Math.PI / 2, 0, -Math.PI]} />
                    <group name='socket_hoverpad_1' position={[0, 0, 0.2]} rotation={[-Math.PI / 2, 0, -Math.PI]} />
                    <group name='socket_hoverpad_2' position={[0, 0, -0.1473]} rotation={[-Math.PI / 2, 0, -Math.PI]} />
                </mesh>
            </group>
        </group>
    );
}

useGLTF.preload('/gltf/board_regular.glb');
